{"version":3,"sources":["webpack:///src/app/components/login/login.page.html","webpack:///src/app/components/login/login-routing.module.ts","webpack:///src/app/components/login/login.module.ts","webpack:///src/app/components/login/login.page.scss","webpack:///src/app/components/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","formBuilder","authService","initForm","signInForm","group","email","required","password","invalid","signIn","value","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAJlC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAI,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAV3B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4EAJO,EAKP,kEALO,CADD;AAQRI,oBAAY,EAAE,CAAC,qDAAD;AARN,OAAT,CAU2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,SAAS;AAIpB,2BACUC,WADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACL;;AAPe;AAAA;AAAA,qCAST;AACT,iBAAKC,QAAL;AACD;AAXmB;AAAA;AAAA,qCAaT;AACT,iBAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBI,KAAjB,CAAuB;AACvCC,mBAAK,EAAE,CAAC,gBAAD,EAAmB,0DAAWC,QAA9B,CADgC;AAEvCC,sBAAQ,EAAE,CAAC,SAAD,EAAY,0DAAWD,QAAvB;AAF6B,aAAvB,CAAlB;AAID;AAlBmB;AAAA;AAAA,mCAoBX;AACP,gBAAI,CAAC,KAAKH,UAAL,CAAgBK,OAArB,EAA8B;AAC5B,mBAAKP,WAAL,CACGQ,MADH,CACU,KAAKN,UAAL,CAAgBO,KAAhB,CAAsBL,KADhC,EACuC,KAAKF,UAAL,CAAgBO,KAAhB,CAAsBH,QAD7D;AAED;AACF;AAzBmB;;AAAA;AAAA,S;;;;gBARb;;gBACA;;;;AAOIR,eAAS,6DALrB,gEAAU;AACTY,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,uGAFS;;;;AAAA,OAAV,CAKqB,GAATb,SAAS,CAAT","file":"components-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input\\n        type=\\\"email\\\"\\n        formControlName=\\\"email\\\"\\n        placeholder=\\\"Enter an email\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input\\n        type=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        placeholder=\\\"Enter a password\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"signInForm.invalid\\\"\\n      >Login</ion-button\\n    >\\n    <ion-button expand=\\\"block\\\" color=\\\"light\\\" [routerLink]=\\\"['/register']\\\">\\n      Register\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/service/auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  signInForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.signInForm = this.formBuilder.group({\n      email: ['test@gmail.com', Validators.required],\n      password: ['123test', Validators.required]\n    })\n  }\n\n  submit() {\n    if (!this.signInForm.invalid) {\n      this.authService\n        .signIn(this.signInForm.value.email, this.signInForm.value.password);\n    }\n  }\n\n  // async loginAction() {\n  //   const value = this.loginForm.value;\n  //   if (!this.loginForm.invalid) {\n  //     let loader = await this.loadingCtrl.create({\n  //       message: \"Please wait...\"\n  //     });\n  //     loader.present();\n\n  //     try {\n  //       await this.angularFireAuth\n  //         .signInWithEmailAndPassword(value.email, value.password)\n  //         .then(data => {\n  //           console.log(`Login - ${data}`);\n  //           this.navCtrl.navigateRoot(\"home\");\n  //         })\n\n  //     } catch (error) {\n  //       console.log(`Register - ${error}`);\n  //     }\n\n  //     loader.dismiss();\n  //   }\n  // }\n\n}\n"]}