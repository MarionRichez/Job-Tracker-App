{"version":3,"sources":["./src/app/components/interview/interview.page.html","./src/app/components/interview/interview-routing.module.ts","./src/app/components/interview/interview.module.ts","./src/app/components/interview/interview.page.scss","./src/app/components/interview/interview.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gHAAiD,oBAAoB,mWAAmW,qBAAqB,mHAAmH,oBAAoB,+GAA+G,mCAAmC,wMAAwM,iBAAiB,0DAA0D,E;;;;;;;;;;;;;;;;;;;ACA/8B;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAI;AAA9B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE2B;AAEvB;IAWpC,mBAAmB,SAAnB,mBAAmB;CAAI;AAAvB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAI;AAAJ;;;;;;;;;;;;;ACnBhC;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;;;;;;;;ACA1K;AACD;AAE4B;IAOhE,aAAa,SAAb,aAAa;IAMxB,YACU,QAAwB,EACxB,gBAAkC;QADlC,aAAQ,GAAR,QAAQ,CAAgB;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAN5C,cAAS,GAAG,EAAe,CAAC;QAQ1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,gBAAgB;aAClB,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;aACvD,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CACF;IACL,CAAC;CACF;;YAvCQ,8DAAc;YAEd,0FAAgB;;AAOZ,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,wOAAoC;;KAErC,CAAC;GACW,aAAa,CA8BzB;AA9ByB","file":"components-interview-interview-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{interview.platform}} Interview</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n        [routerLink]=\\\"['/application/', applicationId]\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label color=\\\"tertiary\\\">Recruiter</ion-label>\\n    <p>{{interview.recruiter}}</p>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label color=\\\"tertiary\\\">Platform</ion-label>\\n    <p>{{interview.platform}}</p>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label color=\\\"tertiary\\\">Date</ion-label>\\n    <p>{{interview.date | date: 'MMM d, y'}}</p>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Notes</ion-label>\\n    <ion-textarea\\n      autoGrow=\\\"true\\\"\\n      readonly\\n      value=\\\"{{interview.notes}}\\\"\\n    ></ion-textarea>\\n  </ion-item>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InterviewPage } from './interview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InterviewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InterviewPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InterviewPageRoutingModule } from './interview-routing.module';\n\nimport { InterviewPage } from './interview.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InterviewPageRoutingModule\n  ],\n  declarations: [InterviewPage]\n})\nexport class InterviewPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW50ZXJ2aWV3L2ludGVydmlldy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Interview } from 'src/app/models/interview.model';\nimport { InterviewService } from 'src/app/service/interview-service.service';\n\n@Component({\n  selector: 'app-view-interview',\n  templateUrl: './interview.page.html',\n  styleUrls: ['./interview.page.scss'],\n})\nexport class InterviewPage implements OnInit {\n\n  interview = {} as Interview;\n  interviewId: any;\n  applicationId: any;\n\n  constructor(\n    private actRoute: ActivatedRoute,\n    private interviewService: InterviewService\n  ) {\n    this.interviewId = this.actRoute.snapshot.paramMap.get(\"id1\");\n    this.applicationId = this.actRoute.snapshot.paramMap.get(\"id2\");\n  }\n\n  ngOnInit() {\n    this.getInterviewById();\n  }\n\n  getInterviewById() {\n    this.interviewService\n      .getInterviewsById(this.applicationId, this.interviewId)\n      .subscribe(\n        (data) => {\n          this.interview.recruiter = data[\"recruiter\"];\n          this.interview.platform = data[\"platform\"];\n          this.interview.date = data[\"date\"];\n          this.interview.notes = data[\"notes\"];\n        }\n      )\n  }\n}\n"],"sourceRoot":"webpack:///"}