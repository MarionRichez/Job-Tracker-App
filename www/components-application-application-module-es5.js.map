{"version":3,"sources":["webpack:///src/app/components/application/application.page.html","webpack:///src/app/components/application/application-routing.module.ts","webpack:///src/app/components/application/application.module.ts","webpack:///src/app/components/application/application.page.scss","webpack:///src/app/components/application/application.page.ts"],"names":["routes","path","component","ApplicationPageRoutingModule","imports","forChild","exports","ApplicationPageModule","declarations","ApplicationPage","actRoute","applicationService","interviewService","calendar","application","show_list","btn_name","id","snapshot","paramMap","get","getApplicationById","getAllInterviews","subscribe","data","interviews","status","company","position","url","date","notes","deleteInterview","createCalendar","createEvent","Date","selector","template"],"mappings":"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","file":"components-application-application-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>{{application.company}}</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [routerLink]=\\\"['/home']\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"addEvent()\\\">\\r\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label color=\\\"tertiary\\\">Status</ion-label>\\r\\n    <p>{{application.status}}</p>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label color=\\\"tertiary\\\">Company</ion-label>\\r\\n    <p>{{application.company}}</p>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label color=\\\"tertiary\\\">Position</ion-label>\\r\\n    <p>{{application.position}}</p>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label color=\\\"tertiary\\\">Url</ion-label>\\r\\n    <a href=\\\"{{application.url}}\\\">Link</a>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label color=\\\"tertiary\\\">Date</ion-label>\\r\\n    <p>{{application.date | date: 'MMM d, y'}}</p>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\">\\r\\n    <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Notes</ion-label>\\r\\n    <ion-textarea\\r\\n      autoGrow=\\\"true\\\"\\r\\n      readonly\\r\\n      value=\\\"{{application.notes}}\\\"\\r\\n    ></ion-textarea>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\" class=\\\"ion-text-center\\\">\\r\\n        <ion-button\\r\\n          color=\\\"primary\\\"\\r\\n          expand=\\\"block\\\"\\r\\n          [routerLink]=\\\"['/add-interview/', id]\\\"\\r\\n        >\\r\\n          Add\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\" class=\\\"ion-text-center\\\">\\r\\n        <ion-button\\r\\n          expand=\\\"block\\\"\\r\\n          color=\\\"light\\\"\\r\\n          (click)=\\\"toggle()\\\"\\r\\n          [disabled]=\\\"interviews == false\\\"\\r\\n        >\\r\\n          {{btn_name}}\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-list *ngIf=\\\"show_list\\\">\\r\\n    <ion-item-sliding *ngFor=\\\"let interview of interviews\\\">\\r\\n      <ion-item\\r\\n        lines=\\\"full\\\"\\r\\n        [routerLink]=\\\"['/interview/', interview.payload.doc.id, id]\\\"\\r\\n      >\\r\\n        <ion-label>\\r\\n          <h2>{{ interview.payload.doc.data().platform }} Interview</h2>\\r\\n          <p>{{ interview.payload.doc.data().date | date: 'MMM d, y' }}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option\\r\\n          [routerLink]=\\\"['/edit-interview/', interview.payload.doc.id, id]\\\"\\r\\n        >\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"pencil\\\"></ion-icon>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option\\r\\n          color=\\\"danger\\\"\\r\\n          (click)=\\\"deleteInterview(interview.payload.doc.id)\\\"\\r\\n        >\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ApplicationPage } from './application.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ApplicationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ApplicationPageRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ApplicationPageRoutingModule } from './application-routing.module';\r\n\r\nimport { ApplicationPage } from './application.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ApplicationPageRoutingModule\r\n  ],\r\n  declarations: [ApplicationPage]\r\n})\r\nexport class ApplicationPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwbGljYXRpb24vYXBwbGljYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Application } from 'src/app/models/application.model';\r\nimport { ApplicationService } from 'src/app/service/application-service.service';\r\nimport { CalendarService } from 'src/app/service/calendar-service.service';\r\nimport { InterviewService } from 'src/app/service/interview-service.service';\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.page.html',\r\n  styleUrls: ['./application.page.scss'],\r\n})\r\nexport class ApplicationPage implements OnInit {\r\n\r\n  application = {} as Application;\r\n  id: any;\r\n  interviews: any;\r\n  show_list: boolean = false;\r\n  btn_name: string = \"Show\";\r\n\r\n  constructor(\r\n    private actRoute: ActivatedRoute,\r\n    private applicationService: ApplicationService,\r\n    private interviewService: InterviewService,\r\n    private calendar: CalendarService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.actRoute.snapshot.paramMap.get(\"id\");\r\n    this.getApplicationById();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.interviewService\r\n      .getAllInterviews(this.id)\r\n      .subscribe(\r\n        (data) => {\r\n          this.interviews = data;\r\n        }\r\n      )\r\n  }\r\n\r\n  getApplicationById() {\r\n    this.applicationService\r\n      .getApplicationById(this.id)\r\n      .subscribe(data => {\r\n        this.application.status = data[\"status\"];\r\n        this.application.company = data[\"company\"];\r\n        this.application.position = data[\"position\"];\r\n        this.application.url = data[\"url\"];\r\n        this.application.date = data[\"date\"];\r\n        this.application.notes = data[\"notes\"]\r\n      })\r\n  }\r\n\r\n  deleteInterview(id: any) {\r\n    this.interviewService.deleteInterview(this.id, id);\r\n  }\r\n\r\n  toggle() {\r\n    this.show_list = !this.show_list;\r\n    if (this.show_list) {\r\n      this.btn_name = \"Hide\";\r\n    } else {\r\n      this.btn_name = \"Show\";\r\n    }\r\n  }\r\n\r\n  addEvent() {\r\n    this.calendar.createCalendar(\"Candidature\");\r\n    this.calendar.createEvent(\r\n      this.application.position,\r\n      this.application.company,\r\n      this.application.notes,\r\n      new Date(this.application.date),\r\n      new Date(this.application.date),\r\n    );\r\n  }\r\n\r\n}\r\n"]}