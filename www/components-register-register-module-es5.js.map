{"version":3,"sources":["webpack:///src/app/components/register/register.page.html","webpack:///src/app/components/register/register-routing.module.ts","webpack:///src/app/components/register/register.module.ts","webpack:///src/app/components/register/register.page.scss","webpack:///src/app/components/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","formBuilder","authService","initForm","signUpForm","group","email","compose","required","pattern","password","maxLength","minLength","invalid","signUp","value","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAV9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,EAKP,kEALO,CADD;AAQRI,oBAAY,EAAE,CAAC,2DAAD;AARN,OAAT,CAU8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,YAAY;AAIvB,8BACUC,WADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACL;;AAPkB;AAAA;AAAA,qCASZ;AACT,iBAAKC,QAAL;AACD;AAXsB;AAAA;AAAA,qCAaZ;AACT,iBAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBI,KAAjB,CAAuB;AACvCC,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,OAAX,CAAmB,CAC7B,0DAAWC,QADkB,EAE7B,0DAAWC,OAAX,CAAmB,iDAAnB,CAF6B,CAAnB,CAAL,CADgC;AAKvCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWH,OAAX,CAAmB,CAChC,0DAAWC,QADqB,EAEhC,0DAAWG,SAAX,CAAqB,EAArB,CAFgC,EAGhC,0DAAWC,SAAX,CAAqB,CAArB,CAHgC,CAAnB,CAAL;AAL6B,aAAvB,CAAlB;AAWD;AAzBsB;AAAA;AAAA,mCA2Bd;AACP,gBAAI,CAAC,KAAKR,UAAL,CAAgBS,OAArB,EAA8B;AAC5B,mBAAKX,WAAL,CACGY,MADH,CACU,KAAKV,UAAL,CAAgBW,KAAhB,CAAsBT,KADhC,EACuC,KAAKF,UAAL,CAAgBW,KAAhB,CAAsBL,QAD7D;AAED;AACF;AAhCsB;;AAAA;AAAA,S;;;;gBARhB;;gBACA;;;;AAOIV,kBAAY,6DALxB,gEAAU;AACTgB,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,6GAFS;;;;AAAA,OAAV,CAKwB,GAAZjB,YAAY,CAAZ","file":"components-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Register</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [routerLink]=\\\"['/login']\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input\\r\\n        type=\\\"email\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        placeholder=\\\"Enter an email\\\"\\r\\n      ></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input\\r\\n        type=\\\"password\\\"\\r\\n        formControlName=\\\"password\\\"\\r\\n        placeholder=\\\"Enter a password\\\"\\r\\n      ></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"signUpForm.invalid\\\">\\r\\n      Register\\r\\n    </ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/service/auth-service.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required, \r\n        Validators.pattern['^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$']])\r\n      ],\r\n      password: ['', Validators.compose([\r\n        Validators.required, \r\n        Validators.maxLength(12), \r\n        Validators.minLength(8)])\r\n      ]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (!this.signUpForm.invalid) {\r\n      this.authService\r\n        .signUp(this.signUpForm.value.email, this.signUpForm.value.password)\r\n    }\r\n  }\r\n\r\n  // async registerAction() {\r\n  //   const value = this.registerForm.value;\r\n  //   if (!this.registerForm.invalid) {\r\n  //     let loader = await this.loadingCtrl.create({\r\n  //       message: \"Please wait...\"\r\n  //     });\r\n  //     loader.present();\r\n\r\n  //     try {\r\n  //       await this.angularFireAuth\r\n  //         .createUserWithEmailAndPassword(value.email, value.password)\r\n  //         .then(data => {\r\n  //           console.log(`Register - ${data}`);\r\n  //           this.navCtrl.navigateRoot(\"home\");\r\n  //         });\r\n  //     } catch (error) {\r\n  //       console.log(`Register - ${error}`);\r\n  //     }\r\n\r\n  //     loader.dismiss();\r\n  //   }\r\n  // }\r\n\r\n}\r\n"]}